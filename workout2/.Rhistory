lord <- c('v','o','l','d','e','m','o','r','t')
lord
#a
lord[TRUE]
#b
lord[length(lord)+1]
#c
lord[seq(from=length(lord), to = 1, by=-2)]
lord[lord=='o']
lord[lord !='e' & lord != 'o']
#f
lord[lord %in% c('a','e','i','o','u')]
toupper(lord[!(lord %in% c('a','e','i','o','u'))])
#h
paste(lord,collapse='')
#i
lord[is.na(lord)]
j) sum(!is.na(lord))
#j
sum(!is.na(lord))
lord
lord[1]
lord[TRUE]
lord[length(lord)]
length(lord)+1
lord
seq(from=length(lord), to = 1, by=-2)
lord[9]
ord=='o'
lord[lord=='o']
typeof(lord[lord=='o'])
#d
lord[lord=='o']
lord[lord !='e' & lord != 'o']
lord[lord !='e' | lord != 'o']
lord[lord %in% c('a','e','i','o','u')]
%in%
lord %in% c('a','e','i','o','u')
!(lord %in% c('a','e','i','o','u'))
paste(lord,collapse='')
is.na(lord)
!is.na(lord)
matrix(lord, nrow=3, ncol=3)
mtx_lord <- matrix(lord, nrow=3, ncol=3)
mtx_lord
#a
mtx(1)
#a
mtx_lord(1)
#a
mtx_lord[1,1]
#a
mtx_lord[1,]
#a
mtx_lord[1]
#a
mtx_lord[1,]
#b
mtx_lord[1,2]
#b
mtx_lord[(1,2),(1,2)]
#b
mtx_lord[1,2]
#b
mtx_lord[c(1,2)]
#b
mtx_lord[c(2,2)]
#b
mtx_lord[c(1,2)]
#b
mtx_lord[c(1,2,3)]
#b
mtx_lord[c(3,2,3)]
#b
mtx_lord[c(2,2)]
#b
mtx_lord[c(2,3)]
#b
mtx_lord[2:4]
#b
mtx_lord[,2]
#b
mtx_lord[c(,2)]
#b
mtx_lord[c(1,2),c(2,3)]
#b
mtx_lord[c(1,2),c(1,2)]
#b
mtx_lord[c(1,2),c(1,1)]
#b
mtx_lord[c(1,2),c(1,3)]
#b
mtx_lord[-c(1,2),c(1,3)]
#b
mtx_lord[c(1,2)]
#b
mtx_lord[c(1,2),c(2,1)]
#c
mtx_lord[c(3,1)]
#c
mtx_lord[c(3,2)]
#c
mtx_lord[c(1,3)]
#c
mtx_lord[c(1,2,3)]
#c
mtx_lord[c(3,2,1)]
#c
mtx_lord[c(3,2,1), c(1,2,3)]
#d
mtx_lord[c(1,2,3), c(1,2,3)]
#d
mtx_lord[c(1,2,3)]
#d
mtx_lord[c(1,2,3), c(1,2,3)]
#d
mtx_lord[c(1,2,3), c(3,2,1), c(3,2,1)]
#d
mtx_lord[c(1,2,3), c(3,2,1)]
#d
mtx_lord[c(1,2,3)]
#d
mtx_lord[c(1,2,3),c(1,2,3)]
#d
mtx_lord[c(1,2,3),c(1,2)]
#d
mtx_lord[c(1,2,3),c(1,2), c(1,2)]
#d
mtx_lord[c(1,2,3),2*c(1,2)]
#d
mtx_lord[c(1,2,3),c(1,2)]
#d
mtx_lord[c(1,2),c(1,2)]
#d
mtx_lord[c(1,2,3),c(1,2)]
#d
mtx_lord[c(1,2,3),c(,2)]
#d
mtx_lord[c(1,2,3),c(1,2)]
#e
mtx_lord[c(3,2,1), c(1,2,3)]
#e
mtx_lord[c(1,2,3),c(3,2,1)]
#e
mtx_lord[c(3,2,1
),c(3,2,1)]
#d
mtx_lord[c(1,2,3),c(2,2,2)]
#d
mtx_lord[c(1,2,3),c(2,2)]
#d
mtx_lord[c(1,2,3),]
#d
mtx_lord[c(1,2,3)]
#d
mtx_lord[c(1,2,3),c(2,1,3)]
#d
mtx_lord[c(1,2,3),c(1,1,3)]
#d
mtx_lord[c(1,2,3),c(1,2,2)]
#f
mtx_lord[c(1,2,3,4,5,6),c(1,2,2)]
#f
mtx_lord[c(1,2,3,4,5,6)]
#f
mtx_lord[c(1,2,3,4,5,6), c(1,2,3,1,2,3)]
#f
mtx_lord[c(1,2,3,4,5,6), c(1,2,3)]
#f
mtx_lord[c(1,2,3,4,5,6), c(1,1,1)]
#f
mtx_lord[c(1,2,3,4,5,6), c(1,1,1,1,1,1,)]
#f
mtx_lord[c(1,2,3,4,5,6), c(1,1,1,1,1,1)]
#f
mtx_lord[c(1,2,3,4,5,6), c(1)]
#f
mtx_lord[c(1,2,3), c(1)]
#f
mtx_lord[c(1,2,3), c(1,1)]
#f
mtx_lord[c(1,2,3,4), c(1,1)]
#f
mtx_lord[c(1,2,3)]
#f
mtx_lord[c(1,2,3),c(1,2,3)]
#f
mtx_lord[c(3,2,1),c(1,2,3)]
#f
mtx_lord[c(1,2,3),c(1,2,3)]
#f
mtx_lord[c(1,2,3),c(1,1,1)]
#f
mtx_lord[c(1,2,3),c(3,2,1)]
#f
mtx_lord[c(3,2,1),c(3,2,1)]
#f
repmat(mtx_lord[c(3,2,1),c(3,2,1)],2,2)
#f
mtx_lord[c(3,2,1),c(3,2,1)]
#f
mtx_lord[c(3,2,1),c(3,2,2,1)]
#f
mtx_lord[c(3,2,1,3,2,1),c(3,2,2,1)]
#g
mtx_lord[c(3,2,1), c(1,2,3)]
#g
mtx_lord[c(3,2,1), c(1,2,3,3,2,1)]
#g
mtx_lord[c(3,-3,2,1), c(1,2,3,3,2,1)]
#g
mtx_lord[c(3,3,2,1), c(1,2,3,3,2,1)]
#g
mtx_lord[c(3,3,2,2,1,1), c(1,2,3,3,2,1)]
#g
mtx_lord[c(3,2,1), c(1,2,3,3,2,1)]
#g
mtx_lord[c(3,2,1,1,2,3), c(1,2,3,3,2,1)]
setwd(~/Desktop/Stat133/Warm-Up/warmup03)
setwd(~Desktop/Stat133/Warm-Up/warmup03)
setwd(~Desktop/Stat133/WarmUp/warmup03)
setwd(~Desktop/Stat133/WarmUp/warmup03/)
setwd(~Desktop/Stat133/WarmUp/warmup03/
exit
lkmkl
setwd("~Desktop/Stat133/WarmUp/warmup03/")
setwd("~Desktop/Stat133/WarmUp/warmup03")
rm(list=ls())
setwd(~Desktop/Stat133/)
setwd("~Desktop/Stat133)
WarmUp
warmup03
getwd
kjdna
pjsap
kn
getwd()
cankjdna
help
exit
~/
pwd
pwd
dat
github <-'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo <-'master/data/nba2018-players.csv'
datafile <- paste0(github,repo)
dat <-  read.csv(datafile, sep = ",")
library(dplyr)
library(ggplot2)
five_rows <- slice(dat,1:5)
five_rows
every_five <- slice(dat, seq(1, nrow(dat), 5))[10:50,]
every_five
last_five <- slice(dat, (nrow(dat)-4):nrow(dat))
last_five
less_seventy <- filter(dat, height < 70)
less_seventy
gsw <- filter(dat, team == 'GSW')
gsw
centers <- filter(dat, position == 'C')
centers
la_players <- select(filter(dat, team =='LAL'),  'player')
la_players
gsw_pg <- select(gsw, player, salary)
gsw_pg
ten_and_ten <- filter(dat, (experience > 10) & (salary <= 10000000))
ten_and_ten <- select(ten_and_ten, player, age, team)
ten_and_ten
rookies <-slice(filter(dat, (experience == 1) & (age == 20)), 1:5)
rookies
gsw <- filter(dat, team == 'GSW')
gsw
gsw3 <- mutate(gsw, product = height*weight)
gsw3
arrange_height <- arrange(filter(dat, height < 71))
arrange_height
highest_paid <- select(slice(arrange(dat, desc(salary)), 1:5), player, team, salary)
highest_paid
three_point <- select(slice(arrange(dat, desc(points3)), 1:10), player, team, points3)
three_point
gsw_mpg <- arrange(select(mutate(gsw, min_per_game = minutes/games), player, experience, min_per_game), desc(min_per_game))
gsw_mpg
height_val <- summarise(dat, max_height = max(height))
height_val
sd_pts3 <- summarise(dat, sd_pts3 = sd(points3))
sd_pts3
pts3_team <- summarise(group_by(dat, team), med_pts3 = median(points3))
pts3_team
tripple <- slice(arrange(summarise(group_by(dat, team), med_pts3 = mean(points3)), med_pts3), 1:5)
tripple
sd_age <- filter(dat, (position == 'PF') & (experience == 5) | (position == 'PF') & (experience == 10))
sd_age <- summarise(sd_age, mean_age = mean(age), sd_age= sd(age))
sd_age
height_weight <- ggplot(data = gsw) + geom_point(aes(x = height, y = weight))
height_weight
txt_hw <- ggplot(data = gsw) + geom_text(aes(x = height, y = weight, label = player))
txt_hw
label_hw <- ggplot(data = gsw) + geom_label(aes(x = height, y = weight, label = player))
label_hw
dense<- ggplot(data=dat, aes(x=salary)) + geom_density()
dense
hist_pt2 <- ggplot(data=dat, aes(x=points2)) + geom_histogram()
hist_pt2
bar_plot <- ggplot(data=dat, aes(x=position)) + geom_bar()
bar_plot
reg <- ggplot(data=centers, aes(experience, salary)) + geom_point()+ geom_smooth(method = lm, se=FALSE)
reg
loess <- ggplot(data=centers, aes(experience, salary)) + geom_point()+ geom_smooth(method = loess, se=FALSE)
loess
dat
dat[['team']]
typeof(dat[['team']])
typeof(sw$team)
typeof(dat$team)
(dat$team)
dat['team']
dat[,'team']
dat['team']
dat[,"team"]
typeof(dat[,"team"])
(dat[["team"]])
typeof((dat[["team"]]))
github <-'https://raw.githubusercontent.com/ucb-stat133/stat133-hws/'
repo <-'master/data/nba2018-players.csv'
datafile <- paste0(github,repo)
dat <-  read.csv(datafile, sep = ",")
library(dplyr)
library(ggplot2)
five_rows <- slice(dat,1:5)
five_rows
every_five <- slice(dat, seq(1, nrow(dat), 5))[10:50,]
every_five
last_five <- slice(dat, (nrow(dat)-4):nrow(dat))
last_five
less_seventy <- filter(dat, height < 70)
less_seventy
gsw <- filter(dat, team == 'GSW')
gsw
centers <- filter(dat, position == 'C')
centers
la_players <- select(filter(dat, team =='LAL'),  'player')
la_players
gsw_pg <- select(gsw, player, salary)
gsw_pg
ten_and_ten <- filter(dat, (experience > 10) & (salary <= 10000000))
ten_and_ten <- select(ten_and_ten, player, age, team)
ten_and_ten
rookies <-slice(filter(dat, (experience == 1) & (age == 20)), 1:5)
rookies
gsw <- filter(dat, team == 'GSW')
gsw
gsw3 <- mutate(gsw, product = height*weight)
gsw3
arrange_height <- arrange(filter(dat, height < 71))
arrange_height
highest_paid <- select(slice(arrange(dat, desc(salary)), 1:5), player, team, salary)
highest_paid
three_point <- select(slice(arrange(dat, desc(points3)), 1:10), player, team, points3)
three_point
gsw_mpg <- arrange(select(mutate(gsw, min_per_game = minutes/games), player, experience, min_per_game), desc(min_per_game))
gsw_mpg
height_val <- summarise(dat, max_height = max(height))
height_val
sd_pts3 <- summarise(dat, sd_pts3 = sd(points3))
sd_pts3
pts3_team <- summarise(group_by(dat, team), med_pts3 = median(points3))
pts3_team
tripple <- slice(arrange(summarise(group_by(dat, team), med_pts3 = mean(points3)), med_pts3), 1:5)
tripple
sd_age <- filter(dat, (position == 'PF') & (experience == 5) | (position == 'PF') & (experience == 10))
sd_age <- summarise(sd_age, mean_age = mean(age), sd_age= sd(age))
sd_age
height_weight <- ggplot(data = gsw) + geom_point(aes(x = height, y = weight))
height_weight
txt_hw <- ggplot(data = gsw) + geom_text(aes(x = height, y = weight, label = player))
txt_hw
label_hw <- ggplot(data = gsw) + geom_label(aes(x = height, y = weight, label = player))
label_hw
dense<- ggplot(data=dat, aes(x=salary)) + geom_density()
dense
hist_pt2 <- ggplot(data=dat, aes(x=points2)) + geom_histogram()
hist_pt2
bar_plot <- ggplot(data=dat, aes(x=position)) + geom_bar()
bar_plot
reg <- ggplot(data=centers, aes(experience, salary)) + geom_point()+ geom_smooth(method = lm, se=FALSE)
reg
loess <- ggplot(data=centers, aes(experience, salary)) + geom_point()+ geom_smooth(method = loess, se=FALSE)
loess
ggplot(data = dat, aes(x = points, y = salary)) +
geom_point(aes(color = position, size = points3))
description:
input(s):
output(s):
title: "Data Preperation"
#description:
#input(s):
#
#title: "Data Preperation"
#description:
#input(s):
#output(s):
curry<- read.csv("../data/stephen-curry.csv", stringsAsFactors = FALSE)
curry
curry
curry
curry
read.csv("../data/stephen-curry.csv", stringsAsFactors = FALSE)
#title: "Data Preperation"
#description:
#input(s):
#output(s):
curry <- read.csv("./data/stephen-curry.csv", stringsAsFactors = FALSE)
green <- read.csv("../data/draymond-green.csv", stringsAsFactors = FALSE)
iguodala <- read.csv("../data/andre-iguodala.csv", stringsAsFactors = FALSE)
curry
curry
curry
curry
source('~/Desktop/workout1/code/make-shots-data-script.R')
#title: "Data Preperation"
#description:
#input(s):
#output(s):
curry <- read.csv("/data/stephen-curry.csv", stringsAsFactors = FALSE)
thompson <- read.csv("/data/klay-thompson.csv", stringsAsFactors = FALSE)
thompson <- read.csv("data/klay-thompson.csv", stringsAsFactors = FALSE)
curry
curry
library(shiny); runApp('test2/test2.R')
runApp('test2/test2.R')
library(shiny); runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
library(shiny); runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
melt
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
runApp('test2/test2.R')
getwd()
setwd()
setwd("~/Desktop/workout2")
getwd()
setwd("~/Desktop/workout2")
library(shiny); runApp('~/test2/test2.R')
getwd(0)
getwd()
